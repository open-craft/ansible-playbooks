version: '3'

{% if USE_POSTGRES %}
volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
{% endif %}

services:
  django: &django
    image: registry.gitlab.com/opencraft/dev/sprintcraft{{ SPRINTCRAFT_IMAGE }}:{{ SPRINTCRAFT_VERSION }}
    depends_on:
      {% if USE_POSTGRES %}
      - postgres
      {% endif %}
      - redis
    env_file:
      - .env
    ports:
      - "127.0.0.1:5000:5000"
    restart: always
    command: /start

  {% if USE_POSTGRES %}
postgres:
    image: registry.gitlab.com/opencraft/dev/sprintcraft:postgres-{{ SPRINTCRAFT_VERSION }}
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - .env
    restart: always
  {% endif %}

  redis:
    image: redis:7
    restart: always

  celeryworker:
    <<: *django
    image: registry.gitlab.com/opencraft/dev/sprintcraft{{ SPRINTCRAFT_IMAGE }}:{{ SPRINTCRAFT_VERSION }}
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: registry.gitlab.com/opencraft/dev/sprintcraft{{ SPRINTCRAFT_IMAGE }}:{{ SPRINTCRAFT_VERSION }}
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: registry.gitlab.com/opencraft/dev/sprintcraft{{ SPRINTCRAFT_IMAGE }}:{{ SPRINTCRAFT_VERSION }}
    ports:
      - "127.0.0.1:5555:5555"
    command: /start-flower

  {% if USE_POSTGRES %}
awscli:
    image: registry.gitlab.com/opencraft/dev/sprintcraft:awscli-{{ SPRINTCRAFT_VERSION }}
    env_file:
      - .env
    volumes:
      - production_postgres_data_backups:/backups
  {% endif %}
