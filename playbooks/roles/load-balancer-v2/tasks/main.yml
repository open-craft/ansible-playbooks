---

- name: Add HAProxy PPA
  apt_repository:
    repo: "{{ haproxy_ppa }}"
  when: haproxy_ppa != ""

- name: Install HAProxy
  apt:
    name: haproxy={{ haproxy_version }}

# The ctmpl files use `{{` and `}}` as Go template start- and end- strings.
# So for Jinja2 rendering we'll use `!` next to the original delimiters.
# Using the ansible variables `variable_start_string ` and `variable_end_string`
# for some reason didn't work, so we used Jinja2 headers to specify them.
- name: Copy over all consul-template config and service files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items:
    - src: "backend.map.ctmpl"
      dest: "{{ consul_template_tmpl_dir }}/backend.map.ctmpl"
      mode: "0644"
    - src: "haproxy.cfg.ctmpl"
      dest: "{{ consul_template_tmpl_dir }}/haproxy.cfg.ctmpl"
      mode: "0644"
    - src: "backend.map.hcl.j2"
      dest: "{{ consul_template_config_dir }}/backend.map.hcl"
      mode: "0644"
    - src: "haproxy.cfg.hcl.j2"
      dest: "{{ consul_template_config_dir }}/haproxy.cfg.hcl"
      mode: "0644"
    - src: "consul-template-render.sh"
      dest: "/usr/local/sbin/consul-template-render.sh"
      mode: "0755"
    - src: "consul-certificates-render.sh"
      dest: "/usr/local/sbin/consul-certificates-render.sh"
      mode: "0755"
    - src: "consul-template-render.service"
      dest: "/lib/systemd/system/consul-template-render.service"
      mode: "0644"
    - src: "consul-certificates-render.service"
      dest: "/lib/systemd/system/consul-certificates-render.service"
      mode: "0644"

- name: Enable and start the consul-template-render service
  systemd:
    daemon_reload: yes
    enabled: yes
    state: restarted
    name: "consul-template-render"

- name: Create directory structure used by consul-certificates-render
  file:
    path: "/etc/haproxy/certs/ocim"
    state: directory
    mode: "0700"

- name: Enable and start the consul-certificates-render service
  systemd:
    daemon_reload: yes
    enabled: yes
    state: restarted
    name: "consul-certificates-render"

- import_tasks: maintenance.yml
- import_tasks: exporter.yml
  when: haproxy_exporter_enabled

- name: Restart rsyslog
  service:
    name: rsyslog
    state: restarted

- name: Open HTTP and HTTPS port on the firewall
  ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: tcp
  with_items:
    - enabled: true
      port: 80
    - enabled: true
      port: 443
    - enabled: "{{ haproxy_enable_stats_page }}"
      port: "{{ haproxy_stats_port }}"
  when: item.enabled
