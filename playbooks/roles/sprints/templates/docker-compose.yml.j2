version: '3'

volumes:
  production_traefik: {}
  {% if USE_POSTGRES %}
  production_postgres_data: {}
  production_postgres_data_backups: {}
  {% endif %}

services:
  django: &django
    image: opencraft/sprints_django
    depends_on:
      {% if USE_POSTGRES %}
      - postgres
      {% endif %}
      - redis
    env_file:
      - .env
    restart: always
    command: /start
  {% if USE_POSTGRES %}
  postgres:
    image: opencraft/sprints_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - .env
    restart: always
  {% endif %}

  traefik:
    image: opencraft/sprints_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    restart: always

  redis:
    image: redis:3.2

  celeryworker:
    <<: *django
    image: opencraft/sprints_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: opencraft/sprints_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: opencraft/sprints_flower
    ports:
      - "5555:5555"
    command: /start-flower
  {% if USE_POSTGRES %}
  awscli:
    image: opencraft/sprints_awscli
    env_file:
      - .env
    volumes:
      - production_postgres_data_backups:/backups
  {% endif %}
